{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\nimport { graphql } from 'react-apollo';\nimport { Button, Card, CardBody, CardColumns, CardImg, CardSubtitle, CardText, CardTitle, Col, Row } from 'reactstrap';\n\nconst RestaurantList = ({\n  data: {\n    loading,\n    error,\n    restaurants\n  },\n  search\n}, req) => {\n  if (error) return 'Error loading restaurants';\n\n  if (restaurants && restaurants.length) {\n    const searchQuery = restaurants.filter(query => query.name.toLowerCase().includes(search));\n\n    if (searchQuery.length != 0) {\n      return __jsx(\"div\", {\n        className: \"jsx-1272619790\"\n      }, __jsx(\"div\", {\n        className: \"jsx-1272619790\" + \" \" + \"h-100\"\n      }, searchQuery.map(res => __jsx(Card, {\n        style: {\n          width: \"30%\",\n          margin: \"0 10px\"\n        },\n        className: \"h-100\",\n        key: res._id\n      }, console.log(res), __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 250\n        },\n        src: res.image ? `http://localhost:1337${res.image.url}` : 'https://www.placecage.com/c/200/300'\n      }), __jsx(CardBody, null, __jsx(CardTitle, null, res.name), __jsx(CardText, null, res.description)), __jsx(\"div\", {\n        className: \"jsx-1272619790\" + \" \" + \"card-footer\"\n      }, __jsx(Link, {\n        as: `/restaurants/${res.id}`,\n        href: `/restaurants?id=${res.id}`\n      }, __jsx(\"a\", {\n        className: \"jsx-1272619790\" + \" \" + \"btn btn-primary\"\n      }, \"View\")))))), __jsx(_JSXStyle, {\n        id: \"1272619790\"\n      }, \"a{color:white;}a:link{-webkit-text-decoration:none;text-decoration:none;color:white;}a:hover{color:white;}.card-columns{-webkit-column-count:3;column-count:3;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nZ3J1bWJsZXkvV29ya2JlbmNoL2RlbGl2ZXJvby9jbGllbnQvY29tcG9uZW50cy9SZXN0YXVyYW50TGlzdC9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0RGEsQUFHNkIsQUFHUyxBQUlULEFBR0csWUFUakIsQUFPQSwwQkFHQSxZQVBjLFlBQ2QiLCJmaWxlIjoiL1VzZXJzL2dncnVtYmxleS9Xb3JrYmVuY2gvZGVsaXZlcm9vL2NsaWVudC9jb21wb25lbnRzL1Jlc3RhdXJhbnRMaXN0L2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZyc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IHsgZ3JhcGhxbCB9IGZyb20gJ3JlYWN0LWFwb2xsbyc7XG5pbXBvcnQge1xuICBCdXR0b24sXG4gIENhcmQsXG4gIENhcmRCb2R5LFxuICBDYXJkQ29sdW1ucyxcbiAgQ2FyZEltZyxcbiAgQ2FyZFN1YnRpdGxlLFxuICBDYXJkVGV4dCxcbiAgQ2FyZFRpdGxlLFxuICBDb2wsXG4gIFJvdyxcbn0gZnJvbSAncmVhY3RzdHJhcCc7XG5cbmNvbnN0IFJlc3RhdXJhbnRMaXN0ID0gKFxuICB7IGRhdGE6IHsgbG9hZGluZywgZXJyb3IsIHJlc3RhdXJhbnRzIH0sIHNlYXJjaCB9LFxuICByZXFcbikgPT4ge1xuICBpZiAoZXJyb3IpIHJldHVybiAnRXJyb3IgbG9hZGluZyByZXN0YXVyYW50cyc7XG5cblxuICBpZiAocmVzdGF1cmFudHMgJiYgcmVzdGF1cmFudHMubGVuZ3RoKSB7XG4gICAgY29uc3Qgc2VhcmNoUXVlcnkgPSByZXN0YXVyYW50cy5maWx0ZXIocXVlcnkgPT4gKFxuICAgICAgcXVlcnkubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaClcbiAgICApKTtcbiAgICBpZiAoc2VhcmNoUXVlcnkubGVuZ3RoICE9IDApIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoLTEwMFwiPlxuICAgICAgICAgICAge3NlYXJjaFF1ZXJ5Lm1hcChyZXMgPT4gKFxuICAgICAgICAgICAgICA8Q2FyZFxuICAgICAgICAgICAgICAgIHN0eWxlPXt7IHdpZHRoOiBcIjMwJVwiLCBtYXJnaW46IFwiMCAxMHB4XCIgfX1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJoLTEwMFwiXG4gICAgICAgICAgICAgICAga2V5PXtyZXMuX2lkfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge2NvbnNvbGUubG9nKHJlcyl9XG4gICAgICAgICAgICAgICAgPENhcmRJbWdcbiAgICAgICAgICAgICAgICAgIHRvcD17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGhlaWdodDogMjUwIH19XG4gICAgICAgICAgICAgICAgICBzcmM9e3Jlcy5pbWFnZSA/IGBodHRwOi8vbG9jYWxob3N0OjEzMzcke3Jlcy5pbWFnZS51cmx9YCA6ICdodHRwczovL3d3dy5wbGFjZWNhZ2UuY29tL2MvMjAwLzMwMCd9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8Q2FyZEJvZHk+XG4gICAgICAgICAgICAgICAgICA8Q2FyZFRpdGxlPntyZXMubmFtZX08L0NhcmRUaXRsZT5cbiAgICAgICAgICAgICAgICAgIDxDYXJkVGV4dD57cmVzLmRlc2NyaXB0aW9ufTwvQ2FyZFRleHQ+XG4gICAgICAgICAgICAgICAgPC9DYXJkQm9keT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtZm9vdGVyXCI+XG4gICAgICAgICAgICAgICAgICA8TGlua1xuICAgICAgICAgICAgICAgICAgICBhcz17YC9yZXN0YXVyYW50cy8ke3Jlcy5pZH1gfVxuICAgICAgICAgICAgICAgICAgICBocmVmPXtgL3Jlc3RhdXJhbnRzP2lkPSR7cmVzLmlkfWB9XG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiPlZpZXc8L2E+XG4gICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+XG4gICAgICAgICAgICB7YFxuICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYTpsaW5rIHtcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGE6aG92ZXIge1xuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAuY2FyZC1jb2x1bW5zIHtcbiAgICAgICAgICAgICAgICBjb2x1bW4tY291bnQ6IDM7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gPGgxPk5vIFJlc3RhdXJhbnRzIEZvdW5kPC9oMT47XG4gICAgfVxuICB9XG4gIHJldHVybiA8aDE+TG9hZGluZzwvaDE+O1xufTtcblxuY29uc3QgcXVlcnkgPSBncWxgXG4gIHtcbiAgICByZXN0YXVyYW50cyB7XG4gICAgICBpZFxuICAgICAgbmFtZVxuICAgICAgZGVzY3JpcHRpb25cbiAgICAgIGltYWdlIHtcbiAgICAgICAgdXJsXG4gICAgICB9XG4gICAgfVxuICB9XG5gO1xuXG5SZXN0YXVyYW50TGlzdC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyByZXEgfSkgPT4ge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy96ZWl0L25leHQuanMnKTtcbiAgY29uc3QganNvbiA9IGF3YWl0IHJlcy5qc29uKCk7XG4gIHJldHVybiB7IHN0YXJzOiBqc29uLnN0YXJnYXplcnNfY291bnQgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGdyYXBocWwocXVlcnksIHtcbiAgcHJvcHM6ICh7IGRhdGEgfSkgPT4gKHtcbiAgICBkYXRhXG4gIH0pLFxufSkoUmVzdGF1cmFudExpc3QpO1xuIl19 */\\n/*@ sourceURL=/Users/ggrumbley/Workbench/deliveroo/client/components/RestaurantList/index.js */\"));\n    } else {\n      return __jsx(\"h1\", null, \"No Restaurants Found\");\n    }\n  }\n\n  return __jsx(\"h1\", null, \"Loading\");\n};\n\nconst query = gql`\n  {\n    restaurants {\n      id\n      name\n      description\n      image {\n        url\n      }\n    }\n  }\n`;\n\nRestaurantList.getInitialProps = async ({\n  req\n}) => {\n  const res = await fetch('https://api.github.com/repos/zeit/next.js');\n  const json = await res.json();\n  return {\n    stars: json.stargazers_count\n  };\n};\n\nexport default graphql(query, {\n  props: ({\n    data\n  }) => ({\n    data\n  })\n})(RestaurantList);","map":{"version":3,"sources":["/Users/ggrumbley/Workbench/deliveroo/client/components/RestaurantList/index.js"],"names":["gql","Link","graphql","Button","Card","CardBody","CardColumns","CardImg","CardSubtitle","CardText","CardTitle","Col","Row","RestaurantList","data","loading","error","restaurants","search","req","length","searchQuery","filter","query","name","toLowerCase","includes","map","res","width","margin","_id","console","log","height","image","url","description","id","getInitialProps","fetch","json","stars","stargazers_count","props"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,OALF,EAMEC,YANF,EAOEC,QAPF,EAQEC,SARF,EASEC,GATF,EAUEC,GAVF,QAWO,YAXP;;AAaA,MAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAR;AAAyCC,EAAAA;AAAzC,CADqB,EAErBC,GAFqB,KAGlB;AACH,MAAIH,KAAJ,EAAW,OAAO,2BAAP;;AAGX,MAAIC,WAAW,IAAIA,WAAW,CAACG,MAA/B,EAAuC;AACrC,UAAMC,WAAW,GAAGJ,WAAW,CAACK,MAAZ,CAAmBC,KAAK,IAC1CA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCR,MAAlC,CADkB,CAApB;;AAGA,QAAIG,WAAW,CAACD,MAAZ,IAAsB,CAA1B,EAA6B;AAC3B,aACE;AAAA;AAAA,SACE;AAAA,4CAAe;AAAf,SACGC,WAAW,CAACM,GAAZ,CAAgBC,GAAG,IAClB,MAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SADT;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,GAAG,EAAEF,GAAG,CAACG;AAHX,SAKGC,OAAO,CAACC,GAAR,CAAYL,GAAZ,CALH,EAME,MAAC,OAAD;AACE,QAAA,GAAG,EAAE,IADP;AAEE,QAAA,KAAK,EAAE;AAAEM,UAAAA,MAAM,EAAE;AAAV,SAFT;AAGE,QAAA,GAAG,EAAEN,GAAG,CAACO,KAAJ,GAAa,wBAAuBP,GAAG,CAACO,KAAJ,CAAUC,GAAI,EAAlD,GAAsD;AAH7D,QANF,EAWE,MAAC,QAAD,QACE,MAAC,SAAD,QAAYR,GAAG,CAACJ,IAAhB,CADF,EAEE,MAAC,QAAD,QAAWI,GAAG,CAACS,WAAf,CAFF,CAXF,EAeE;AAAA,4CAAe;AAAf,SACE,MAAC,IAAD;AACE,QAAA,EAAE,EAAG,gBAAeT,GAAG,CAACU,EAAG,EAD7B;AAEE,QAAA,IAAI,EAAG,mBAAkBV,GAAG,CAACU,EAAG;AAFlC,SAIE;AAAA,4CAAa;AAAb,gBAJF,CADF,CAfF,CADD,CADH,CADF;AAAA;AAAA,8tIADF;AAkDD,KAnDD,MAmDO;AACL,aAAO,yCAAP;AACD;AACF;;AACD,SAAO,4BAAP;AACD,CAnED;;AAqEA,MAAMf,KAAK,GAAGvB,GAAI;;;;;;;;;;;CAAlB;;AAaAa,cAAc,CAAC0B,eAAf,GAAiC,OAAO;AAAEpB,EAAAA;AAAF,CAAP,KAAmB;AAClD,QAAMS,GAAG,GAAG,MAAMY,KAAK,CAAC,2CAAD,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMb,GAAG,CAACa,IAAJ,EAAnB;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAED,IAAI,CAACE;AAAd,GAAP;AACD,CAJD;;AAMA,eAAezC,OAAO,CAACqB,KAAD,EAAQ;AAC5BqB,EAAAA,KAAK,EAAE,CAAC;AAAE9B,IAAAA;AAAF,GAAD,MAAe;AACpBA,IAAAA;AADoB,GAAf;AADqB,CAAR,CAAP,CAIZD,cAJY,CAAf","sourcesContent":["import gql from 'graphql-tag';\nimport Link from 'next/link';\nimport { graphql } from 'react-apollo';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardColumns,\n  CardImg,\n  CardSubtitle,\n  CardText,\n  CardTitle,\n  Col,\n  Row,\n} from 'reactstrap';\n\nconst RestaurantList = (\n  { data: { loading, error, restaurants }, search },\n  req\n) => {\n  if (error) return 'Error loading restaurants';\n\n\n  if (restaurants && restaurants.length) {\n    const searchQuery = restaurants.filter(query => (\n      query.name.toLowerCase().includes(search)\n    ));\n    if (searchQuery.length != 0) {\n      return (\n        <div>\n          <div className=\"h-100\">\n            {searchQuery.map(res => (\n              <Card\n                style={{ width: \"30%\", margin: \"0 10px\" }}\n                className=\"h-100\"\n                key={res._id}\n              >\n                {console.log(res)}\n                <CardImg\n                  top={true}\n                  style={{ height: 250 }}\n                  src={res.image ? `http://localhost:1337${res.image.url}` : 'https://www.placecage.com/c/200/300'}\n                />\n                <CardBody>\n                  <CardTitle>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <Link\n                    as={`/restaurants/${res.id}`}\n                    href={`/restaurants?id=${res.id}`}\n                  >\n                    <a className=\"btn btn-primary\">View</a>\n                  </Link>\n                </div>\n              </Card>\n            ))}\n          </div>\n\n          <style jsx global>\n            {`\n              a {\n                color: white;\n              }\n              a:link {\n                text-decoration: none;\n                color: white;\n              }\n              a:hover {\n                color: white;\n              }\n              .card-columns {\n                column-count: 3;\n              }\n            `}\n          </style>\n        </div>\n      );\n    } else {\n      return <h1>No Restaurants Found</h1>;\n    }\n  }\n  return <h1>Loading</h1>;\n};\n\nconst query = gql`\n  {\n    restaurants {\n      id\n      name\n      description\n      image {\n        url\n      }\n    }\n  }\n`;\n\nRestaurantList.getInitialProps = async ({ req }) => {\n  const res = await fetch('https://api.github.com/repos/zeit/next.js');\n  const json = await res.json();\n  return { stars: json.stargazers_count };\n};\n\nexport default graphql(query, {\n  props: ({ data }) => ({\n    data\n  }),\n})(RestaurantList);\n"]},"metadata":{},"sourceType":"module"}